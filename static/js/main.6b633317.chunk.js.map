{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/Tabs/Tab.js","Routes/Detail/Tabs/Tabs.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","asset/noPosterSmall.png"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","icon","faSpinner","spin","size","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","isSeason","require","to","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvApi","topRated","get","airingToday","showDetail","append_to_response","search","term","query","encodeURIComponent","moviesApi","movieDetail","collectionsApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","async","Tab","onClick","label","activeTab","TabDiv","TabContent","TabList","Tabs","onClickTabItem","tab","TrueTab","filter","child","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","ImdbLink","TabResult","youtube","YoutubePlayer","ReactPlayer","TabGridDiv","poster","GridDiv","NameSpan","country","Img","img","src","company","CollectionLink","DetailPresenter","result","backdrop_path","belongs_to_collection","runtime","episode_run_time","genres","genre","index","name","href","imdb_id","overview","videos","video","url","controls","width","production_companies","logo_path","production_countries","created_by","profile_path","seasons","season","episode_count","air_date","DetailContainer","isMoive","includes","match","push","history","parsedId","parseInt","isNaN","CollectionPresenter","collection","parts","part","CollectionContainer","path","exact","component","Home","TV","Search","Detail","Colletion","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6b633317.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child){\r\n\r\n  margin-bottom :50px;\r\n  }\r\n\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size : 16pt;\r\n  font-weight :600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top :25px;\r\n  display :grid;\r\n  grid-template-columns:repeat(auto-fill, 125px);\r\n  grid-gap :25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  \r\n  <Container>\r\n    <span role=\"svg\" aria-label=\"Loading\">\r\n       <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width :100vw;\r\n  display : flex;\r\n  justify-content :center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color :${props => props.color};\r\n`;\r\n\r\nconst Message =  ({ text,color }) => (\r\n  <Container>\r\n    <Text color ={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text : PropTypes.string.isRequired,\r\n  color : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({\r\n  id,\r\n  imageUrl,\r\n  title,\r\n  rating,\r\n  year,\r\n  isMovie = false,\r\n  isSeason = false\r\n}) =>\r\n  !isSeason ? (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n      <Container>\r\n        <ImageContainer>\r\n          <Image\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : require(\"../asset/noPosterSmall.png\")\r\n            }\r\n          />\r\n          <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">\r\n              ⭐\r\n            </span>{\" \"}\r\n            {rating}/10\r\n          </Rating>\r\n        </ImageContainer>\r\n        <Title>\r\n          {title.length > 18 ? `${title.substring(0, 15)}...` : title}\r\n        </Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  ) : (\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../asset/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          {`${rating} Episode`}\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  );\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | ChoiFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"4b7a8df7b1e4ead0c85284e9069bae16\",\r\n    language: \"ko-KR\"\r\n  }\r\n});\r\n\r\n\r\nexport const tvApi = {\r\n  topRated : () => api.get(\"tv/top_rated\"),\r\n  popular : () => api.get('tv/popular'),\r\n  airingToday : () => api.get(\"tv/airing_today\"),\r\n showDetail : (id) => api.get(`tv/${id}`, {\r\n   params : {\r\n     append_to_response : \"videos\"\r\n   }\r\n }),\r\n search : (term) =>api.get(\"search/tv\",{\r\n  params : {\r\n    query : encodeURIComponent(term)\r\n  }\r\n})\r\n}\r\n\r\nexport const moviesApi = {\r\n  nowPlaying : () => api.get(\"movie/now_playing\"),\r\n  upcoming : () => api.get(\"movie/upcoming\"),\r\n  popular : () => api.get(\"movie/popular\"),\r\n  movieDetail : (id) => api.get(`movie/${id}`, {\r\n    params : {\r\n      append_to_response : \"videos\"\r\n    }\r\n  }),\r\n  search : (term) =>api.get(\"search/movie\",{\r\n    params : {\r\n      query : encodeURIComponent(term)\r\n    }\r\n  })\r\n\r\n}\r\n\r\nexport const collectionsApi = {\r\n  getCollection : (id) => api.get(`collection/${id}`)\r\n}","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\n\r\nexport default class extends React.Component{\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | ChoiFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Reated Show\">\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Show\">\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"AiringToday Show\">\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV informaiton\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100vw;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 23px;\r\n  width: 100vw;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | ChoiFlix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value: searchTerm }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm\r\n    });\r\n  };\r\n\r\n  searchByTerm = async term => {\r\n    try {\r\n      this.setState({ loading: true });\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(term);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(term);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Item = styled.li`\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n  color: white;\r\n  cursor: pointer;\r\n  border-bottom: none;\r\n  padding: 10px;\r\n  transition: transform 0.3s ease-in-out 0s;\r\n  &:hover {\r\n    transform: translateY(-3px);\r\n  }\r\n border-bottom  : 2px solid ${props => props.current ? \"white\" : \"transparent\"};\r\n width:100%;\r\n`;\r\n\r\nclass Tab extends React.Component{\r\n  static propTypes = {\r\n    activeTab :PropTypes.string.isRequired,\r\n    label :PropTypes.string.isRequired,\r\n    onClick :PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const {label, onClick} =this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      onClick,\r\n      props:{\r\n        activeTab,\r\n        label\r\n      }\r\n    } =this;\r\n\r\n  return <Item current={activeTab===label} onClick={onClick}>{label}</Item>\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Tab;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Tab from \"./Tab\";\r\n\r\nconst TabDiv = styled.div`\r\n  width: 55%;\r\n  height: 50%;\r\n`;\r\n\r\nconst TabContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TabList = styled.ul`\r\n  display: flex;\r\n  margin-top: 10px;\r\n  width:100%;\r\n`;\r\n\r\nclass Tabs extends React.Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const TrueTab = this.props.children.filter(child => child && child);\r\n    this.state = {\r\n      activeTab:TrueTab[0].props.label,\r\n      TrueTab :TrueTab\r\n    };\r\n   \r\n  }\r\n  onClickTabItem = tab => {\r\n    this.setState({ activeTab: tab });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      state: { activeTab,TrueTab }\r\n    } = this;\r\n    return (\r\n     <TabDiv>\r\n        <TabList>\r\n          {TrueTab[0] && TrueTab.map(tab => {\r\n            const { label } = tab.props;\r\n\r\n            return (\r\n              <Tab\r\n                activeTab={activeTab}\r\n                key={label}\r\n                label={label}\r\n                onClick={onClickTabItem}\r\n              />\r\n            );\r\n          })}\r\n            </TabList>\r\n          <TabContent>\r\n            {TrueTab[0] && TrueTab.map(tab => {\r\n              if (tab.props.label !== activeTab) return undefined;\r\n              return tab.props.children;\r\n            })}\r\n          </TabContent>\r\n      </TabDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\nimport Tabs from \"./Tabs/Tabs\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  font-size: 13pt;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12pt;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst ImdbLink = styled.a`\r\n  all: unset;\r\n  width: 20px;\r\n  height: 10px;\r\n  background-color: rgb(245, 197, 24);\r\n  color: rgb(0, 0, 0);\r\n  font-weight: 900;\r\n  text-transform: capitalize;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  padding: 2px 5px;\r\n`;\r\n\r\nconst TabResult = styled.div`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 30px 0px;\r\n  transition: all 0.3s ease-in-out 0s;\r\n  ${props => (props.youtube ? \"height : 500px; overflow :auto\" : null)};\r\n  &::-webkit-scrollbar {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst YoutubePlayer = styled(ReactPlayer)`\r\n  :not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst TabGridDiv = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.poster ? \"repeat(auto-fill,125px)\" : \"repeat(auto-fill, 30%)\"};\r\n  grid-gap: ${props => (props.poster ? \"70px\" : \"3%\")};\r\n  justify-content: center;\r\n`;\r\n\r\nconst GridDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  -webkit-box-pack: center;\r\n  justify-content: center;\r\n  -webkit-box-align: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  margin: 5px;\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst NameSpan = styled.span`\r\n  display: inline-block;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  text-align: center;\r\n  font-size: 16px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin: 3px;\r\n  ${props => (props.country ? `width : 100%` : null)}\r\n`;\r\nconst Img = styled.img`\r\n  width: ${props =>\r\n    props.src !== \"/static/media/noPosterSmall.87a0eb6a.png\" && props.company\r\n      ? \"100%\"\r\n      : \"80px\"};\r\n  height: 100px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CollectionLink = styled(Link)`\r\n  all: unset;\r\n  position: relative;\r\n  left: 20px;\r\n  font-size: 20px;\r\n  background-color: rgb(255, 107, 107);\r\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\r\n  transition: transform 0.3s ease-in-out 0s;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | ChoiFlix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message text=\"Can't find result\" />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../asset/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n            {result.belongs_to_collection && (\r\n              <CollectionLink\r\n                to={`/collection/${result.belongs_to_collection.id}`}\r\n              >\r\n                Collection\r\n              </CollectionLink>\r\n            )}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>🔘</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>🔘</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            {result.runtime ? (\r\n              <>\r\n                <Divider>🔘</Divider>\r\n                <Item>\r\n                  <ImdbLink\r\n                    href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                    target=\"_blank\"\r\n                  >\r\n                    IMDB\r\n                  </ImdbLink>\r\n                </Item>\r\n              </>\r\n            ) : null}\r\n          </ItemContainer>\r\n          <Overview>{result.overview && result.overview}</Overview>\r\n          <Tabs>\r\n            {result.videos.results && result.videos.results.length > 0 && (\r\n              <div label=\"Youtube\" key=\"youtube\">\r\n                <TabResult youtube>\r\n                  {result.videos.results.map(video => (\r\n                    <YoutubePlayer\r\n                      url={`https://www.youtube.com/watch?v=${video.key}`}\r\n                      controls\r\n                      width=\"100%\"\r\n                      \r\n                      key={video.key}\r\n                    />\r\n                  ))}\r\n                </TabResult>\r\n              </div>\r\n            )}\r\n            {result.production_companies &&\r\n              result.production_companies.length > 0 && (\r\n                <div label=\"Production Company\" key=\"company\">\r\n                  <TabResult>\r\n                    <TabGridDiv>\r\n                      {result.production_companies.map(company => (\r\n                        <GridDiv key={company.id}>\r\n                          <Img\r\n                            src={\r\n                              company.logo_path !== null\r\n                                ? `https://image.tmdb.org/t/p/original${company.logo_path}`\r\n                                : require(\"../../asset/noPosterSmall.png\")\r\n                            }\r\n                            company\r\n                          />\r\n                          <NameSpan>{company.name}</NameSpan>\r\n                        </GridDiv>\r\n                      ))}\r\n                    </TabGridDiv>\r\n                  </TabResult>\r\n                </div>\r\n              )}\r\n            {result.production_countries &&\r\n              result.production_countries.length > 0 && (\r\n                <div label=\"Production Countries\" key=\"country\">\r\n                  <TabResult>\r\n                    {result.production_countries.map(country => (\r\n                      <NameSpan key={country.name} country>\r\n                        {country.name}\r\n                      </NameSpan>\r\n                    ))}\r\n                  </TabResult>\r\n                </div>\r\n              )}\r\n            {result.created_by && result.created_by.length > 0 && (\r\n              <div label=\"Created By\" key=\"created\">\r\n                <TabResult>\r\n                  <TabGridDiv>\r\n                    {result.created_by.map(create => (\r\n                      <GridDiv key={create.id}>\r\n                        <Img\r\n                          src={\r\n                            create.profile_path !== null\r\n                              ? `https://image.tmdb.org/t/p/original${create.profile_path}`\r\n                              : require(\"../../asset/noPosterSmall.png\")\r\n                          }\r\n                        />\r\n                        <NameSpan>{create.name}</NameSpan>\r\n                      </GridDiv>\r\n                    ))}\r\n                  </TabGridDiv>\r\n                </TabResult>\r\n              </div>\r\n            )}\r\n            {result.seasons && result.seasons.length > 0 && (\r\n              <div label=\"Seasons\">\r\n                <TabResult>\r\n                  <TabGridDiv poster>\r\n                    {result.seasons.map(season => (\r\n                      <Poster\r\n                        id={season.id}\r\n                        isSeason={true}\r\n                        key={season.id}\r\n                        title={season.name}\r\n                        rating={season.episode_count}\r\n                        imageUrl={season.poster_path}\r\n                        year={season.air_date}\r\n                      />\r\n                    ))}\r\n                  </TabGridDiv>\r\n                </TabResult>\r\n              </div>\r\n            )}\r\n          </Tabs>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  tab: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMoive: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n\r\n    const { isMoive } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      ({ data: result } = isMoive\r\n        ? await moviesApi.movieDetail(parsedId)\r\n        : await tvApi.showDetail(parsedId));\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { result, loading, error,tab } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} tab={tab} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes, { object } from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Section from \"../../Components/Section\";\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  \r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst CollectionPresenter = ({ collection, error, loading }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n    <Backdrop\r\n    bgImage={`https://image.tmdb.org/t/p/original/${collection.backdrop_path}`}\r\n    />\r\n    <Container>\r\n      <Content>\r\n\r\n      <Cover bgImage={collection.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${collection.poster_path}`\r\n              : require(\"../../asset/noPosterSmall.png\") } />\r\n              <Data>\r\n\r\n      <Section title={collection.name}>\r\n        {collection.parts.map(part => (\r\n          <Poster\r\n          key={part.id}\r\n          id={part.id}\r\n          title={part.original_title}\r\n          imageUrl={part.poster_path}\r\n          rating={part.vote_average}\r\n          isMovie={true}\r\n          year={part.release_date && part.release_date.substring(0, 4)}\r\n          />\r\n          ))}\r\n      </Section>\r\n          </Data>\r\n          </Content>\r\n    </Container>\r\n    </>\r\n  );\r\n\r\nCollectionPresenter.propTypes = {\r\n  collection: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CollectionPresenter;\r\n","import CollectionContainer from \"./CollectionContainer\";\r\n\r\nexport default CollectionContainer;","\r\nimport React from \"react\";\r\nimport CollectionPresenter from \"./CollectionPresenter\";\r\nimport {collectionsApi} from \"../../api\";\r\n\r\n\r\n\r\nexport default class extends React.Component{\r\n\r\n  state  ={\r\n    collection :null,\r\n    error: null,\r\n    loading: true\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    try{\r\n      const {data :collection }  = await collectionsApi.getCollection(id);\r\n      this.setState({\r\n        collection\r\n      })\r\n    \r\n    }catch{\r\n      this.setState({\r\n        error: \"Can't find collection information.\"\r\n      });\r\n    }finally{\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n   \r\n  }\r\n\r\n  render(){\r\n    const {collection, error, loading} = this.state;\r\n    return <CollectionPresenter collection ={collection} error={error} loading={loading} />\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Colletion from \"Routes/Collection\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Route path=\"/collection/:id\" component={Colletion} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import {createGlobalStyle} from \"styled-components\";\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles =createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n    text-decoration :none;\r\n    color :inherit;\r\n  }\r\n  *{\r\n    box-sizing :border-box;\r\n  }\r\n  body{\r\n    font-size:14pt;\r\n    font-family :'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n    background-color:rgba(20,20,20,1);\r\n    color:white;\r\n    padding-top :50px;\r\n  \r\n  }\r\n\r\n`;\r\n\r\nexport default globalStyles;","import React from 'react';\nimport  Router  from 'Components/Router';\nimport GlobalStyles from \"Components/GlobalStyles\";\n\n\nfunction App() {\n  return (\n    <>\n\n      <Router />\n      <GlobalStyles/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";"],"sourceRoot":""}